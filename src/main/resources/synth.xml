<!--
    See:
    https://docs.oracle.com/javase/tutorial/uiswing/lookandfeel/synth.html
    https://docs.oracle.com/javase/tutorial/uiswing/lookandfeel/synthExample.html
    https://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/synth/doc-files/synthFileFormat.html
    https://docs.oracle.com/javase/8/docs/api/javax/swing/plaf/synth/doc-files/componentProperties.html
    http://www.easynth.com/freewares/EaSynthLookAndFeel.html
    https://dzone.com/articles/easynth-look-and-feel-customiz-0
    https://www.ibm.com/developerworks/java/library/j-synth/

    Note: synthLookAndFeel search logic is by state first, then by style.
    e.g.: if a button named A must be shown, search priority is as follows:
    1. the ENABLED state version of the style linked to the "A" name
    2. the ENABLED state version of the style linked to the "Button" region
    3. the default (unspecified) state version of the style linked to the "A" name
    4. the default (unspecified) state version of the style linked to the "Button" region
-->
<synth>
    <object id="EaSynthGraphicsUtils" class="com.easynth.designer.laf.utils.EaSynthGraphicsUtils"/>
    <object id="GinjSynthPainter" class="info.ginj.ui.laf.GinjSynthPainter"/>

    <object id="Window_Background_Color" class="java.awt.Color"><int>37</int><int>38</int><int>40</int><int>255</int></object>
    <object id="Label_Background_Color" class="java.awt.Color"><int>27</int><int>28</int><int>29</int><int>255</int></object>
    <object id="Selected_Text_Background_Color" class="java.awt.Color"><int>153</int><int>200</int><int>238</int><int>255</int></object>
    <object id="ProgressBar_Background_Color" class="java.awt.Color"><int>230</int><int>230</int><int>230</int><int>255</int></object>
    <object id="ProgressBar_Line_Color" class="java.awt.Color"><int>255</int><int>215</int><int>0</int><int>255</int></object>

    <!-- Used by exporter wizard to warn about invalid state-->
    <object id="NB_ErrorColor" class="java.awt.Color"><int>255</int><int>239</int><int>139</int><int>255</int></object>
    <defaultsProperty key="nb.errorColor" type="idref" value="NB_ErrorColor"/>

    <object id="Button_Border_Color_Enabled" class="java.awt.Color">
        <int>192</int><int>170</int><int>145</int><int>255</int>
    </object>
    <object id="Button_Border_Color_MouseOver" class="java.awt.Color">
        <int>128</int><int>100</int><int>80</int><int>255</int>
    </object>
    <object id="Button_Border_Color_Pressed" class="java.awt.Color">
        <int>80</int><int>65</int><int>40</int><int>255</int>
    </object>
    <object id="Button_Border_Color_Disabled" class="java.awt.Color">
        <int>192</int><int>170</int><int>145</int><int>255</int>
    </object>
    <object id="Button_Border_Color_Default_Enabled" class="java.awt.Color">
        <int>220</int><int>145</int><int>40</int><int>255</int>
    </object>
    <object id="Button_Border_Color_Default_MouseOver" class="java.awt.Color">
        <int>202</int><int>101</int><int>0</int><int>255</int>
    </object>
    <object id="Button_Border_Color_Default_Pressed" class="java.awt.Color">
        <int>155</int><int>78</int><int>0</int><int>255</int>
    </object>
    <object id="Button_Border_Color_Default_Disabled" class="java.awt.Color">
        <int>255</int><int>128</int><int>0</int><int>255</int>
    </object>
    <object id="InternalFrame_MainColor" class="java.awt.Color">
        <int>190</int><int>160</int><int>140</int><int>255</int>
    </object>
    <object id="TitledBorder_TextColor" class="java.awt.Color">
        <int>140</int><int>125</int><int>100</int><int>255</int>
    </object>

    <!-- This backing style will make sure that any components that do not match a specific style will have a default style. -->
    <!-- WARNING : there is a second "default" style for key=".*" that complements this one later in the file. Check it for more comments... -->
    <style id="Default">
        <font name="Dialog" size="12"/>
        <defaultsProperty key="TitledBorder.titleColor" type="idref" value="TitledBorder_TextColor"/>
        <state>
            <!-- Default color -->
            <!-- Note that removing this default color makes non-hovered radio button texts black. Don't ask why. -->
            <!-- Radio buttons should react to TEXT_FOREGROUND, but even setting it to white in all states keeps using black for non-hovered, unselected... -->
            <color type="FOREGROUND" value="#FFFFFF"/>
        </state>
    </style>
    <bind style="Default" type="region" key=".*" />

    <!-- The style for root pane. -->²²
    <!--    Disabled because we want some windows to be transparent-->
    <!--    <style id="Root Pane">-->
    <!--        <imageIcon id="RootPane_Bg_Image" path="resource/1204548216629_rootpane_background.png"/>-->
    <!--        <property key="EaSynth.rootpanel.bg.image" type="idref" value="RootPane_Bg_Image"/>-->
    <!--        <painter idref="GinjSynthPainter" method="rootPaneBackground"/>-->
    <!--    </style>-->
    <!--    <bind style="Root Pane" type="region" key="RootPane" />-->

    <!-- The style for panel component. -->
    <style id="PanelStyle">
    </style>
    <bind style="PanelStyle" type="region" key="Panel"/>

    <!-- The style for title bar panel component. -->
    <style id="TitleBarPanelStyle">
        <state>
            <imagePainter method="panelBorder" path="/img/laf/titlebar_panel.png" sourceInsets="1 1 1 1" paintCenter="true" stretch="true" center="false"/>
        </state>
    </style>
    <bind style="TitleBarPanelStyle" type="name" key="TitleBarPanel"/>

    <style id="YellowBorderedPanelStyle">
        <state>
            <imagePainter method="panelBorder" path="/img/laf/yellow_bordered_panel.png" sourceInsets="1 1 1 1" paintCenter="false" stretch="true" center="false"/>
        </state>
    </style>
    <bind style="YellowBorderedPanelStyle" type="name" key="YellowBorderedPanel" />

    <style id="DoubleBorderedPanelStyle">
        <state>
            <imagePainter method="panelBorder" path="/img/laf/double_bordered_panel.png" sourceInsets="4 4 4 4" paintCenter="false" stretch="true" center="false"/>
        </state>
    </style>
    <bind style="DoubleBorderedPanelStyle" type="name" key="DoubleBorderedPanel" />

    <!-- The style for overlay button bar components used e.g. to choose Font properties -->
    <style id="OverlayButtonBarPanelStyle">
        <state>
            <imagePainter method="panelBorder" path="/img/laf/popupbar_panel.png" sourceInsets="2 2 2 2" paintCenter="true" stretch="true" center="false"/>
        </state>
    </style>
    <bind style="OverlayButtonBarPanelStyle" type="name" key="OverlayButtonBarPanel"/>

    <!-- The style for history button panel component. -->
    <style id="HistoryButtonPanelStyle">
        <state>
            <imagePainter method="panelBorder" path="/img/laf/history_buttonpanel.png" sourceInsets="13 1 13 1" paintCenter="true" stretch="true" center="false"/>
        </state>
    </style>
    <bind style="HistoryButtonPanelStyle" type="name" key="HistoryButtonPanel"/>

    <!-- The style for arrow buttons. -->
    <style id="Arrow Button">
        <property key="ArrowButton.size" type="integer" value="14"/>
        <painter idref="GinjSynthPainter" method="arrowButtonForeground" direction="north"/>
        <painter idref="GinjSynthPainter" method="arrowButtonForeground" direction="west"/>
        <painter idref="GinjSynthPainter" method="arrowButtonForeground" direction="south"/>
        <painter idref="GinjSynthPainter" method="arrowButtonForeground" direction="east"/>
        <state value="ENABLED">
            <imageIcon id="Arrow_Up_Enabled" path="resource/1204972099671_arrow_up_normal.png"/>
            <property key="EaSynth.arrow.up.enabled" type="idref" value="Arrow_Up_Enabled"/>
            <imageIcon id="Arrow_Left_Enabled" path="resource/1204972109765_arrow_left_normal.png"/>
            <property key="EaSynth.arrow.left.enabled" type="idref" value="Arrow_Left_Enabled"/>
            <imageIcon id="Arrow_Down_Enabled" path="resource/1204972119562_arrow_down_normal.png"/>
            <property key="EaSynth.arrow.down.enabled" type="idref" value="Arrow_Down_Enabled"/>
            <imageIcon id="Arrow_Right_Enabled" path="resource/1204972131593_arrow_right_normal.png"/>
            <property key="EaSynth.arrow.right.enabled" type="idref" value="Arrow_Right_Enabled"/>
        </state>
        <state value="MOUSE_OVER">
            <imageIcon id="Arrow_Up_MouseOver" path="resource/1204972154296_arrow_up_over.png"/>
            <property key="EaSynth.arrow.up.mouseover" type="idref" value="Arrow_Up_MouseOver"/>
            <imageIcon id="Arrow_Left_MouseOver" path="resource/1204972172953_arrow_left_over.png"/>
            <property key="EaSynth.arrow.left.mouseover" type="idref" value="Arrow_Left_MouseOver"/>
            <imageIcon id="Arrow_Down_MouseOver" path="resource/1204972180796_arrow_down_over.png"/>
            <property key="EaSynth.arrow.down.mouseover" type="idref" value="Arrow_Down_MouseOver"/>
            <imageIcon id="Arrow_Right_MouseOver" path="resource/1204972188046_arrow_right_over.png"/>
            <property key="EaSynth.arrow.right.mouseover" type="idref" value="Arrow_Right_MouseOver"/>
        </state>
        <state value="PRESSED">
            <imageIcon id="Arrow_Up_Pressed" path="resource/1204972222593_arrow_up_press.png"/>
            <property key="EaSynth.arrow.up.pressed" type="idref" value="Arrow_Up_Pressed"/>
            <imageIcon id="Arrow_Left_Pressed" path="resource/1204972229812_arrow_left_press.png"/>
            <property key="EaSynth.arrow.left.pressed" type="idref" value="Arrow_Left_Pressed"/>
            <imageIcon id="Arrow_Down_Pressed" path="resource/1204972236828_arrow_down_press.png"/>
            <property key="EaSynth.arrow.down.pressed" type="idref" value="Arrow_Down_Pressed"/>
            <imageIcon id="Arrow_Right_Pressed" path="resource/1204972243953_arrow_right_press.png"/>
            <property key="EaSynth.arrow.right.pressed" type="idref" value="Arrow_Right_Pressed"/>
        </state>
        <state value="DISABLED">
            <imageIcon id="Arrow_Up_Disabled" path="resource/1204972279156_arrow_up_disable.png"/>
            <property key="EaSynth.arrow.up.disabled" type="idref" value="Arrow_Up_Disabled"/>
            <imageIcon id="Arrow_Left_Disabled" path="resource/1204972286015_arrow_left_disable.png"/>
            <property key="EaSynth.arrow.left.disabled" type="idref" value="Arrow_Left_Disabled"/>
            <imageIcon id="Arrow_Down_Disabled" path="resource/1204972293703_arrow_down_disable.png"/>
            <property key="EaSynth.arrow.down.disabled" type="idref" value="Arrow_Down_Disabled"/>
            <imageIcon id="Arrow_Right_Disabled" path="resource/1204972301171_arrow_right_disable.png"/>
            <property key="EaSynth.arrow.right.disabled" type="idref" value="Arrow_Right_Disabled"/>
        </state>
    </style>
    <bind style="Arrow Button" type="region" key="ArrowButton" />

    <!-- The style for check box button. -->
    <style id="CheckBoxStyle">
        <property key="CheckBox.margin" type="insets" value="2 2 2 2"/>
        <state value="ENABLED">
            <imageIcon id="Checkbox_Normal" path="/img/laf/checkbox_normal.png"/>
            <property key="CheckBox.icon" type="idref" value="Checkbox_Normal"/>
        </state>
        <state value="MOUSE_OVER">
            <imageIcon id="Checkbox_MouseOver" path="/img/laf/checkbox_mouseover.png"/>
            <property key="CheckBox.icon" type="idref" value="Checkbox_MouseOver"/>
        </state>
        <state value="SELECTED">
            <imageIcon id="Checkbox_Selected" path="/img/laf/checkbox_selected.png"/>
            <property key="CheckBox.icon" type="idref" value="Checkbox_Selected"/>
        </state>
        <state value="MOUSE_OVER AND SELECTED">
            <imageIcon id="Checkbox_MouseOver_Selected" path="/img/laf/checkbox_selected.png"/>
            <property key="CheckBox.icon" type="idref" value="Checkbox_MouseOver_Selected"/>
        </state>
        <state value="DISABLED">
            <imageIcon id="Checkbox_Disabled" path="/img/laf/checkbox_disabled.png"/>
            <property key="CheckBox.icon" type="idref" value="Checkbox_Disabled"/>
            <color type="TEXT_FOREGROUND" value="#999999"/>
        </state>
        <state value="PRESSED">
            <imageIcon id="Checkbox_Pressed" path="/img/laf/checkbox_pressed.png"/>
            <property key="CheckBox.icon" type="idref" value="Checkbox_Pressed"/>
        </state>
        <state value="DISABLED and SELECTED">
            <imageIcon id="Checkbox_Disabled_Selected" path="/img/laf/checkbox_disabled.png"/>
            <property key="CheckBox.icon" type="idref" value="Checkbox_Disabled_Selected"/>
        </state>
    </style>
    <bind style="CheckBoxStyle" type="region" key="CheckBox" />

    <!-- The style for radio button. -->
    <style id="RadioButtonStyle">
        <property key="RadioButton.margin" type="insets" value="2 2 2 2"/>
        <imageIcon id="Radio_Button_Normal" path="/img/laf/radio_enabled.png"/>
        <imageIcon id="Radio_Button_MouseOver" path="/img/laf/radio_mouseover.png"/>
        <imageIcon id="Radio_Button_Pressed" path="/img/laf/radio_pressed.png"/>
        <imageIcon id="Radio_Button_Disabled" path="/img/laf/radio_disabled.png"/>
        <imageIcon id="Radio_Button_Selected" path="/img/laf/radio_selected.png"/>
        <imageIcon id="Radio_Button_Disabled_Selected" path="/img/laf/radio_disabled_selected.png"/>
        <state value="ENABLED">
            <property key="RadioButton.icon" type="idref" value="Radio_Button_Normal"/>
        </state>
        <state value="MOUSE_OVER">
            <property key="RadioButton.icon" type="idref" value="Radio_Button_MouseOver"/>
        </state>
        <state value="PRESSED">
            <property key="RadioButton.icon" type="idref" value="Radio_Button_Pressed"/>
        </state>
        <state value="DISABLED">
            <property key="RadioButton.icon" type="idref" value="Radio_Button_Disabled"/>
            <color type="TEXT_FOREGROUND" value="#999999"/>
        </state>
        <state value="SELECTED">
            <property key="RadioButton.icon" type="idref" value="Radio_Button_Selected"/>
        </state>
        <state value="MOUSE_OVER and SELECTED">
            <property key="RadioButton.icon" type="idref" value="Radio_Button_Selected"/>
        </state>
        <state value="DISABLED and SELECTED">
            <property key="RadioButton.icon" type="idref" value="Radio_Button_Disabled_Selected"/>
        </state>
    </style>
    <bind style="RadioButtonStyle" type="region" key="RadioButton" />

    <!-- The style for color chooser component. -->
    <style id="Color Chooser">
    </style>
    <bind style="Color Chooser" type="region" key="ColorChooser" />

    <!--    &lt;!&ndash; The style for combo box component. &ndash;&gt;-->
    <!--    <style id="Combo Box">-->
    <!--        <insets top="3" left="3" bottom="3" right="3"/>-->
    <!--        <property key="ComboBox.showPopupOnNavigation" type="boolean" value="true"/>-->
    <!--        <property key="ComboBox.rendererUseListColors" type="boolean" value="false"/>-->
    <!--        <painter idref="GinjSynthPainter" method="comboBoxBorder"/>-->
    <!--        <state value="ENABLED">-->
    <!--            <imagePainter method="comboBoxBackground" path="resource/1263602197905_combobox_normal.png" sourceInsets="2 2 2 2" paintCenter="true" stretch="true" center="false"/>-->
    <!--        </state>-->
    <!--        <state value="DISABLED">-->
    <!--            <imagePainter method="comboBoxBackground" path="resource/1263602213671_combobox_disabled.png" sourceInsets="2 2 2 2" paintCenter="true" stretch="true" center="false"/>-->
    <!--        </state>-->
    <!--    </style>-->
    <!--    <bind style="Combo Box" type="region" key="ComboBox" />-->

    <!--    &lt;!&ndash; The style for internal frame. &ndash;&gt;-->
    <!--    <style id="Internal Frame">-->
    <!--        <insets top="3" left="3" bottom="3" right="3"/>-->
    <!--        <imageIcon id="InternalFrame_Icon" path="resource/1204292723703_internal_frame_icon.png"/>-->
    <!--        <property key="InternalFrame.icon" type="idref" value="InternalFrame_Icon"/>-->
    <!--        <defaultsProperty key="EaSynth.internalframe.main.color" type="idref" value="InternalFrame_MainColor"/>-->
    <!--        <painter idref="GinjSynthPainter" method="internalFrameBackground"/>-->
    <!--        <painter idref="GinjSynthPainter" method="internalFrameBorder"/>-->
    <!--    </style>-->
    <!--    <bind style="Internal Frame" type="region" key="InternalFrame" />-->

    <!--    &lt;!&ndash; The style for the title pane of internal frame. &ndash;&gt;-->
    <!--    <style id="Internal Frame Title Pane">-->
    <!--        <property key="InternalFrameTitlePane.titleSpacing" type="integer" value="5"/>-->
    <!--        <property key="InternalFrameTitlePane.maxFrameIconSize" type="dimension" value="24 24"/>-->
    <!--        <imageIcon id="InternalFrame_MaximizeButton_Icon" path="resource/1204294372812_internal_frame_max_icon.png"/>-->
    <!--        <property key="InternalFrameTitlePane.maximizeIcon" type="idref" value="InternalFrame_MaximizeButton_Icon"/>-->
    <!--        <imageIcon id="InternalFrame_CloseButton_Icon" path="resource/1204294470625_internal_frame_close_icon.png"/>-->
    <!--        <property key="InternalFrameTitlePane.closeIcon" type="idref" value="InternalFrame_CloseButton_Icon"/>-->
    <!--        <imageIcon id="InternalFrame_RestoreButton_Icon" path="resource/1204295742281_internal_frame_restore_icon.png"/>-->
    <!--        <property key="InternalFrameTitlePane.minimizeIcon" type="idref" value="InternalFrame_RestoreButton_Icon"/>-->
    <!--        <imageIcon id="InternalFrame_MinimizeButton_Icon" path="resource/1204296642906_internal_frame_min_icon.png"/>-->
    <!--        <property key="InternalFrameTitlePane.iconifyIcon" type="idref" value="InternalFrame_MinimizeButton_Icon"/>-->
    <!--        <painter idref="GinjSynthPainter" method="internalFrameTitlePaneBackground"/>-->
    <!--        <painter idref="GinjSynthPainter" method="internalFrameTitlePaneBorder"/>-->
    <!--        <defaultsProperty key="EaSynth.internalframe.main.color" type="idref" value="InternalFrame_MainColor"/>-->
    <!--        <insets top="2" left="2" bottom="2" right="2"/>-->
    <!--    </style>-->
    <!--    <bind style="Internal Frame Title Pane" type="region" key="InternalFrameTitlePane" />-->

    <!--    <style id="Internal Frame Close Button">-->
    <!--        <opaque value="true"/>-->
    <!--        <state value="ENABLED">-->
    <!--            <color idref="InternalFrame_MainColor" type="BACKGROUND"/>-->
    <!--        </state>-->
    <!--        <state value="MOUSE_OVER">-->
    <!--            <color idref="InternalFrame_MainColor" type="BACKGROUND"/>-->
    <!--        </state>-->
    <!--        <state value="PRESSED">-->
    <!--            <color idref="InternalFrame_MainColor" type="BACKGROUND"/>-->
    <!--        </state>-->
    <!--        <state value="DISABLED">-->
    <!--            <color idref="InternalFrame_MainColor" type="BACKGROUND"/>-->
    <!--        </state>-->
    <!--    </style>-->
    <!--    <bind style="Internal Frame Close Button" type="name" key="InternalFrameTitlePane.closeButton" />-->

    <!--    <style id="Internal Frame Minimize Button">-->
    <!--        <opaque value="true"/>-->
    <!--        <state value="ENABLED">-->
    <!--            <color idref="InternalFrame_MainColor" type="BACKGROUND"/>-->
    <!--        </state>-->
    <!--        <state value="MOUSE_OVER">-->
    <!--            <color idref="InternalFrame_MainColor" type="BACKGROUND"/>-->
    <!--        </state>-->
    <!--        <state value="PRESSED">-->
    <!--            <color idref="InternalFrame_MainColor" type="BACKGROUND"/>-->
    <!--        </state>-->
    <!--        <state value="DISABLED">-->
    <!--            <color idref="InternalFrame_MainColor" type="BACKGROUND"/>-->
    <!--        </state>-->
    <!--    </style>-->
    <!--    <bind style="Internal Frame Minimize Button" type="name" key="InternalFrameTitlePane.iconifyButton" />-->

    <!--    <style id="Internal Frame Maximize Button">-->
    <!--        <opaque value="true"/>-->
    <!--        <state value="ENABLED">-->
    <!--            <color idref="InternalFrame_MainColor" type="BACKGROUND"/>-->
    <!--        </state>-->
    <!--        <state value="MOUSE_OVER">-->
    <!--            <color idref="InternalFrame_MainColor" type="BACKGROUND"/>-->
    <!--        </state>-->
    <!--        <state value="PRESSED">-->
    <!--            <color idref="InternalFrame_MainColor" type="BACKGROUND"/>-->
    <!--        </state>-->
    <!--        <state value="DISABLED">-->
    <!--            <color idref="InternalFrame_MainColor" type="BACKGROUND"/>-->
    <!--        </state>-->
    <!--    </style>-->
    <!--    <bind style="Internal Frame Maximize Button" type="name" key="InternalFrameTitlePane.maximizeButton" />-->

    <!--    &lt;!&ndash; The style for desktop icon (iconified internal frame). &ndash;&gt;-->
    <!--    <style id="Desktop Icon">-->
    <!--    </style>-->
    <!--    <bind style="Desktop Icon" type="region" key="DesktopIcon" />-->

    <!--    &lt;!&ndash; The style for desktop pane (the internal frame container). &ndash;&gt;-->
    <!--    <style id="DesktopPane">-->
    <!--    </style>-->
    <!--    <bind style="DesktopPane" type="region" key="DesktopPane" />-->

    <!-- The style for file chooser component. -->
    <style id="File Chooser">
        <state value="ENABLED">
            <color type="BACKGROUND" idref="Window_Background_Color"/>
        </state>
        <imageIcon id="FileChooser_Folder_Icon" path="/img/laf/icon/folder.png"/>
        <property key="FileView.directoryIcon" type="idref" value="FileChooser_Folder_Icon"/>
        <imageIcon id="FileChooser_File_Icon" path="/img/laf/icon/file.png"/>
        <property key="FileView.fileIcon" type="idref" value="FileChooser_File_Icon"/>
        <imageIcon id="FileChooser_Computer_Icon" path="/img/laf/icon/computer.png"/>
        <property key="FileView.computerIcon" type="idref" value="FileChooser_Computer_Icon"/>
        <imageIcon id="FileChooser_Harddisk_Icon" path="/img/laf/icon/hard-disk.png"/>
        <property key="FileView.hardDriveIcon" type="idref" value="FileChooser_Harddisk_Icon"/>
        <imageIcon id="FileChooser_NewFolder_Icon" path="/img/laf/icon/folder-new.png"/>
        <property key="FileChooser.newFolderIcon" type="idref" value="FileChooser_NewFolder_Icon"/>
        <imageIcon id="FileChooser_UpperFolder_Icon" path="/img/laf/icon/folder-up.png"/>
        <property key="FileChooser.upFolderIcon" type="idref" value="FileChooser_UpperFolder_Icon"/>
        <imageIcon id="FileChooser_Home_Icon" path="/img/laf/icon/home.png"/>
        <property key="FileChooser.homeFolderIcon" type="idref" value="FileChooser_Home_Icon"/>

        <!--        <imageIcon id="FileChooser_Cancel_Icon" path="resource/1204902668718_filechooser_cancel_icon.png"/>-->
        <!--        <property key="FileChooser.cancelIcon" type="idref" value="FileChooser_Cancel_Icon"/>-->
        <!--        <imageIcon id="FileChooser_Ok_Icon" path="resource/1204902652625_filechooser_ok_icon.png"/>-->
        <!--        <property key="FileChooser.okIcon" type="idref" value="FileChooser_Ok_Icon"/>-->

        <imageIcon id="FileChooser_Floppydriver_Icon" path="resource/1204905250468_filechooser_floppydriver_icon.png"/>
        <property key="FileView.floppyDriveIcon" type="idref" value="FileChooser_Floppydriver_Icon"/>
        <imageIcon id="FileChooser_Details_Icon" path="resource/1204905941328_filechooser_details_icon.png"/>
        <property key="FileChooser.detailsViewIcon" type="idref" value="FileChooser_Details_Icon"/>
        <imageIcon id="FileChooser_List_Icon" path="resource/1204905931656_filechooser_list_icon.png"/>
        <property key="FileChooser.listViewIcon" type="idref" value="FileChooser_List_Icon"/>

        <insets top="10" left="10" bottom="10" right="10"/>
    </style>
    <bind style="File Chooser" type="region" key="FileChooser" />

    <!-- The style for list component. -->
    <style id="ListStyle">
        <insets top="5" left="8" bottom="5" right="8"/>
        <property key="List.rendererUseUIBorder" type="boolean" value="false"/>
        <property key="List.cellHeight" type="integer" value="21"/>
        <property key="List.rendererUseListColors" type="boolean" value="true"/>
        <state value="ENABLED">
            <color type="BACKGROUND" value="#DDDAD5"/>
            <color type="FOREGROUND" value="#000000"/>
        </state>
        <state value="DISABLED">
            <color type="FOREGROUND" value="#777777"/>
        </state>
        <state value="SELECTED">
            <color type="TEXT_BACKGROUND" value="#FDDB01"/>
        </state>
    </style>
    <bind style="ListStyle" type="region" key="List" />

    <!--    &lt;!&ndash; The style for menu bar. &ndash;&gt;-->
    <!--    <style id="Menu Bar">-->
    <!--        <insets top="3" left="3" bottom="3" right="3"/>-->
    <!--        <state value="ENABLED">-->
    <!--            <imagePainter method="menuBarBackground" path="resource/1204812856281_menubar_bg_enabled.png" sourceInsets="2 2 2 2" paintCenter="true" stretch="true" center="false"/>-->
    <!--        </state>-->
    <!--        <state value="DISABLED">-->
    <!--            <imagePainter method="menuBarBackground" path="resource/1204812879093_menubar_bg_disabled.png" sourceInsets="2 2 2 2" paintCenter="true" stretch="true" center="false"/>-->
    <!--        </state>-->
    <!--    </style>-->
    <!--    <bind style="Menu Bar" type="region" key="MenuBar" />-->

    <!--    &lt;!&ndash; The style for menu. &ndash;&gt;-->
    <!--    <style id="Menu">-->
    <!--        <insets top="4" left="0" bottom="4" right="0"/>-->
    <!--        <imageIcon id="Menu_Arrow_Icon" path="resource/1204475729593_arrow_right_over.png"/>-->
    <!--        <property key="Menu.arrowIcon" type="idref" value="Menu_Arrow_Icon"/>-->
    <!--        <object id="Menu_Bg_Color_Normal" class="java.awt.Color">-->
    <!--            <int>241</int><int>233</int><int>217</int><int>255</int>-->
    <!--        </object>-->
    <!--        <object id="Menu_Bg_Color_Selected" class="java.awt.Color">-->
    <!--            <int>255</int><int>240</int><int>210</int><int>255</int>-->
    <!--        </object>-->
    <!--        <defaultsProperty key="EaSynth.menu.bg.color.normal" type="idref" value="Menu_Bg_Color_Normal"/>-->
    <!--        <defaultsProperty key="EaSynth.menu.bg.color.selected" type="idref" value="Menu_Bg_Color_Selected"/>-->
    <!--        <painter idref="GinjSynthPainter" method="#menuBackground"/>-->
    <!--        <state value="ENABLED">-->
    <!--            <color type="TEXT_FOREGROUND" value="#00FF00"/>-->
    <!--        </state>-->
    <!--        <state value="DISABLED">-->
    <!--            <color type="TEXT_FOREGROUND" value="#999999"/>-->
    <!--        </state>-->
    <!--        <state value="SELECTED">-->
    <!--            <color type="TEXT_FOREGROUND" value="#AA4400"/>-->
    <!--            <imagePainter method="menuBackground" path="resource/1264231987812_MenuItem_Selected.png" sourceInsets="2 2 2 2" paintCenter="true" stretch="true" center="false"/>-->
    <!--        </state>-->
    <!--    </style>-->
    <!--    <bind style="Menu" type="region" key="Menu" />-->

    <!--    &lt;!&ndash; The style for check box menu item. &ndash;&gt;-->
    <!--    <style id="Check Box Menu Item">-->
    <!--        <imageIcon id="CheckBoxMenuItem_Check_Icon_Enabled" path="resource/1252405736906_Checkbox_MenuItem_None.png"/>-->
    <!--        <imageIcon id="CheckBoxMenuItem_Check_Icon_MouseOver" path="resource/1252405890781_Checkbox_MenuItem_Hover.png"/>-->
    <!--        <imageIcon id="CheckBoxMenuItem_Check_Icon_Selected" path="resource/1252405906156_Checkbox_MenuItem_Selected.png"/>-->
    <!--        <imageIcon id="CheckBoxMenuItem_Check_Icon_Disabled" path="resource/1252405809406_Checkbox_MenuItem_None.png"/>-->
    <!--        <insets top="4" left="0" bottom="4" right="0"/>-->
    <!--        <state value="ENABLED">-->
    <!--            <imagePainter method="checkBoxMenuItemBackground" path="/img/laf/menuitem_bg_enabled.png" sourceInsets="0 0 0 0" paintCenter="true" stretch="true" center="false"/>-->
    <!--            <color type="TEXT_FOREGROUND" value="#00FF00"/>-->
    <!--            <property key="CheckBoxMenuItem.checkIcon" type="idref" value="CheckBoxMenuItem_Check_Icon_Enabled"/>-->
    <!--        </state>-->
    <!--        <state value="MOUSE_OVER">-->
    <!--            <color type="TEXT_FOREGROUND" value="#AA4400"/>-->
    <!--            <property key="CheckBoxMenuItem.checkIcon" type="idref" value="CheckBoxMenuItem_Check_Icon_MouseOver"/>-->
    <!--            <imagePainter method="checkBoxMenuItemBackground" path="/img/laf/menuitem_selected.png" sourceInsets="2 2 2 2" paintCenter="true" stretch="true" center="false"/>-->
    <!--        </state>-->
    <!--        <state value="DISABLED">-->
    <!--            <imagePainter method="checkBoxMenuItemBackground" path="/img/laf/menuitem_bg_disabled.png" sourceInsets="0 0 0 0" paintCenter="true" stretch="true" center="false"/>-->
    <!--            <color type="TEXT_FOREGROUND" value="#999999"/>-->
    <!--            <property key="CheckBoxMenuItem.checkIcon" type="idref" value="CheckBoxMenuItem_Check_Icon_Disabled"/>-->
    <!--        </state>-->
    <!--        <state id="CheckBoxMenuItem_State_Selected" value="SELECTED">-->
    <!--            <imagePainter method="checkBoxMenuItemBackground" path="/img/laf/menuitem_bg_enabled.png" sourceInsets="0 0 0 0" paintCenter="true" stretch="true" center="false"/>-->
    <!--            <color type="TEXT_FOREGROUND" value="#AA4400"/>-->
    <!--            <property key="CheckBoxMenuItem.checkIcon" type="idref" value="CheckBoxMenuItem_Check_Icon_Selected"/>-->
    <!--        </state>-->
    <!--        <state clone="CheckBoxMenuItem_State_Selected" value="MOUSE_OVER and SELECTED">-->
    <!--            <imagePainter method="checkBoxMenuItemBackground" path="/img/laf/menuitem_selected.png" sourceInsets="2 2 2 2" paintCenter="true" stretch="true" center="false"/>-->
    <!--        </state>-->
    <!--    </style>-->
    <!--    <bind style="Check Box Menu Item" type="region" key="CheckBoxMenuItem" />-->

    <!--    &lt;!&ndash; The style for radio button menu item. &ndash;&gt;-->
    <!--    <style id="Radio Button Menu Item">-->
    <!--        <imageIcon id="RadioButtonMenuItem_Radio_Icon_Enabled" path="resource/1252407137734_Radiobutton_MenuItem_Normal.png"/>-->
    <!--        <imageIcon id="RadioButtonMenuItem_Radio_Icon_MouseOver" path="resource/1252458649609_Radiobutton_MenuItem_Hover.png"/>-->
    <!--        <imageIcon id="RadioButtonMenuItem_Radio_Icon_Selected" path="resource/1252407169453_Radiobutton_MenuItem_Selected.png"/>-->
    <!--        <imageIcon id="RadioButtonMenuItem_Radio_Icon_Disabled" path="resource/1252407182546_Radiobutton_MenuItem_Disabled.png"/>-->
    <!--        <insets top="4" left="0" bottom="4" right="0"/>-->
    <!--        <state value="ENABLED">-->
    <!--            <imagePainter method="radioButtonMenuItemBackground" path="resource/1204817049984_menu_item_bg_enabled.png" sourceInsets="0 0 0 0" paintCenter="true" stretch="true" center="false"/>-->
    <!--            <color type="TEXT_FOREGROUND" value="#00FF00"/>-->
    <!--            <property key="RadioButtonMenuItem.checkIcon" type="idref" value="RadioButtonMenuItem_Radio_Icon_Enabled"/>-->
    <!--        </state>-->
    <!--        <state value="MOUSE_OVER">-->
    <!--            <color type="TEXT_FOREGROUND" value="#AA4400"/>-->
    <!--            <property key="RadioButtonMenuItem.checkIcon" type="idref" value="RadioButtonMenuItem_Radio_Icon_MouseOver"/>-->
    <!--            <imagePainter method="radioButtonMenuItemBackground" path="resource/1264231987812_MenuItem_Selected.png" sourceInsets="2 2 2 2" paintCenter="true" stretch="true" center="false"/>-->
    <!--        </state>-->
    <!--        <state value="DISABLED">-->
    <!--            <imagePainter method="radioButtonMenuItemBackground" path="resource/1204817081656_menu_item_bg_disabled.png" sourceInsets="0 0 0 0" paintCenter="true" stretch="true" center="false"/>-->
    <!--            <color type="TEXT_FOREGROUND" value="#999999"/>-->
    <!--            <property key="RadioButtonMenuItem.checkIcon" type="idref" value="RadioButtonMenuItem_Radio_Icon_Disabled"/>-->
    <!--        </state>-->
    <!--        <state id="RadioButtonMenuItem_State_Selected" value="SELECTED">-->
    <!--            <imagePainter method="radioButtonMenuItemBackground" path="resource/1204817049984_menu_item_bg_enabled.png" sourceInsets="0 0 0 0" paintCenter="true" stretch="true" center="false"/>-->
    <!--            <color type="TEXT_FOREGROUND" value="#AA4400"/>-->
    <!--            <property key="RadioButtonMenuItem.checkIcon" type="idref" value="RadioButtonMenuItem_Radio_Icon_Selected"/>-->
    <!--        </state>-->
    <!--        <state clone="RadioButtonMenuItem_State_Selected" value="MOUSE_OVER and SELECTED">-->
    <!--            <imagePainter method="radioButtonMenuItemBackground" path="resource/1264231987812_MenuItem_Selected.png" sourceInsets="2 2 2 2" paintCenter="true" stretch="true" center="false"/>-->
    <!--        </state>-->
    <!--    </style>-->
    <!--    <bind style="Radio Button Menu Item" type="region" key="RadioButtonMenuItem" />-->

<!--        &lt;!&ndash; The style for popup menu. &ndash;&gt;-->
<!--        <style id="Popup Menu">-->
<!--            <insets top="4" left="4" bottom="10" right="9"/>-->
<!--            <imageIcon id="EaSynth_Popup_Menu_Bg" path="resource/1227873224531_PopupMenu-Background.png"/>-->
<!--            <painter idref="GinjSynthPainter" method="popupMenuBackground"/>-->
<!--            <property key="EaSynth.popup.menu.bg" type="idref" value="EaSynth_Popup_Menu_Bg"/>-->
<!--        </style>-->
<!--        <bind style="Popup Menu" type="region" key="PopupMenu" />-->

    <!--    &lt;!&ndash; The style for popup menu separator. &ndash;&gt;-->
    <!--    <style id="Popup Menu Separator">-->
    <!--        <property key="Separator.thickness" type="integer" value="1"/>-->
    <!--        <opaque value="true"/>-->
    <!--        <state value="ENABLED">-->
    <!--            <color type="BACKGROUND" value="#CCBB99"/>-->
    <!--        </state>-->
    <!--        <state value="DISABLED">-->
    <!--            <color type="BACKGROUND" value="#CCCCCC"/>-->
    <!--        </state>-->
    <!--    </style>-->
    <!--    <bind style="Popup Menu Separator" type="region" key="PopupMenuSeparator" />-->


    <!-- The style for menu item. -->
    <!-- Used only for account management and sharing-->
    <style id="MenuItemStyle">
        <insets top="4" left="4" bottom="4" right="4"/>
        <state value="ENABLED">
            <!-- #3C4043 on #FFFFFF Required by Google - https://developers.google.com/photos/library/guides/ux-guidelines -->
            <imagePainter method="menuItemBackground" path="/img/laf/menuitem_bg_enabled.png" sourceInsets="1 1 1 1" paintCenter="true" stretch="true" center="false"/>
            <color type="TEXT_FOREGROUND" value="#3C4043"/>
        </state>
        <state value="MOUSE_OVER">
            <imagePainter method="menuItemBackground" path="/img/laf/menuitem_selected.png" sourceInsets="1 1 1 1" paintCenter="true" stretch="true" center="false"/>
            <color type="TEXT_FOREGROUND" value="#FFFFFF"/>
        </state>
        <state value="DISABLED">
            <imagePainter method="menuItemBackground" path="/img/laf/menuitem_bg_disabled.png" sourceInsets="1 1 1 1" paintCenter="true" stretch="true" center="false"/>
            <color type="TEXT_FOREGROUND" value="#8C8C8C"/>
        </state>
    </style>
    <bind style="MenuItemStyle" type="region" key="MenuItem" />

    <!-- The style for menu item accelerator. -->
    <style id="MenuItemAcceleratorStyle">
        <state>
            <color type="TEXT_FOREGROUND" value="#777700"/>
        </state>
    </style>
    <bind style="MenuItemAcceleratorStyle" type="region" key="MenuItemAccelerator" />

    <!-- The style for option pane component. -->
    <style id="OptionPaneStyle">
        <imageIcon id="OptionPane_Error_Icon" path="/img/laf/icon/error.png"/>
        <property key="OptionPane.errorIcon" type="idref" value="OptionPane_Error_Icon"/>

        <imageIcon id="OptionPane_Warn_Icon" path="/img/laf/icon/warning.png"/>
        <property key="OptionPane.warningIcon" type="idref" value="OptionPane_Warn_Icon"/>

        <imageIcon id="OptionPane_Info_Icon" path="/img/laf/icon/information.png"/>
        <property key="OptionPane.informationIcon" type="idref" value="OptionPane_Info_Icon"/>

        <imageIcon id="OptionPane_Question_Icon" path="/img/laf/icon/question.png"/>
        <property key="OptionPane.questionIcon" type="idref" value="OptionPane_Question_Icon"/>
        <insets top="10" left="10" bottom="10" right="10"/>
    </style>
    <bind style="OptionPaneStyle" type="region" key="OptionPane" />

    <!-- The style for progress bar component. -->
    <style id="ProgressBarStyle">
        <painter idref="GinjSynthPainter" method="progressBarForeground"/>
        <painter idref="GinjSynthPainter" method="progressBarBackground"/>
        <painter idref="GinjSynthPainter" method="progressBarBorder"/>
        <property key="ProgressBar.horizontalSize" type="dimension" value="166 16"/>
        <imageIcon id="ProgressBar_Background_Image" path="/img/laf/progressbar_bg.png"/>
        <property key="EaSynth.progressbar.background.image" type="idref" value="ProgressBar_Background_Image"/>
        <defaultsProperty key="EaSynth.progressbar.background.color" type="idref" value="ProgressBar_Background_Color"/>
        <!-- Note: Insets are top, left, bottom, and right -->
        <object id="ProgressBar_Bg_Insets" class="java.awt.Insets">
            <int>2</int><int>1</int><int>2</int><int>1</int>
        </object>
        <property key="EaSynth.progressbar.bg.insets" type="idref" value="ProgressBar_Bg_Insets"/>
        <defaultsProperty key="EaSynth.progressbar.line.color" type="idref" value="ProgressBar_Line_Color"/>
    </style>
    <bind style="ProgressBarStyle" type="region" key="ProgressBar" />


    <!-- The style for arrow buttons. -->
    <!-- Used in scroll bar component (and combo boxes ?) -->
    <style id="GinjArrow Button">
        <property key="GinjArrowButton.size" type="integer" value="14"/>
        <painter idref="GinjSynthPainter" method="arrowButtonForeground" direction="north"/>
        <painter idref="GinjSynthPainter" method="arrowButtonForeground" direction="west"/>
        <painter idref="GinjSynthPainter" method="arrowButtonForeground" direction="south"/>
        <painter idref="GinjSynthPainter" method="arrowButtonForeground" direction="east"/>
        <state value="ENABLED">
            <imageIcon id="GinjArrow_Up_Enabled" path="/img/laf/arrow_up_normal.png"/>
            <property key="EaSynth.arrow.up.enabled" type="idref" value="GinjArrow_Up_Enabled"/>
            <imageIcon id="GinjArrow_Left_Enabled" path="/img/laf/arrow_left_normal.png"/>
            <property key="EaSynth.arrow.left.enabled" type="idref" value="GinjArrow_Left_Enabled"/>
            <imageIcon id="GinjArrow_Down_Enabled" path="/img/laf/arrow_down_normal.png"/>
            <property key="EaSynth.arrow.down.enabled" type="idref" value="GinjArrow_Down_Enabled"/>
            <imageIcon id="GinjArrow_Right_Enabled" path="/img/laf/arrow_right_normal.png"/>
            <property key="EaSynth.arrow.right.enabled" type="idref" value="GinjArrow_Right_Enabled"/>
        </state>
        <state value="MOUSE_OVER">
            <imageIcon id="GinjArrow_Up_MouseOver" path="/img/laf/arrow_up_over.png"/>
            <property key="EaSynth.arrow.up.mouseover" type="idref" value="GinjArrow_Up_MouseOver"/>
            <imageIcon id="GinjArrow_Left_MouseOver" path="/img/laf/arrow_left_over.png"/>
            <property key="EaSynth.arrow.left.mouseover" type="idref" value="GinjArrow_Left_MouseOver"/>
            <imageIcon id="GinjArrow_Down_MouseOver" path="/img/laf/arrow_down_over.png"/>
            <property key="EaSynth.arrow.down.mouseover" type="idref" value="GinjArrow_Down_MouseOver"/>
            <imageIcon id="GinjArrow_Right_MouseOver" path="/img/laf/arrow_right_over.png"/>
            <property key="EaSynth.arrow.right.mouseover" type="idref" value="GinjArrow_Right_MouseOver"/>
        </state>
        <state value="PRESSED">
            <!-- reusing the same images -->
            <property key="EaSynth.arrow.up.pressed" type="idref" value="GinjArrow_Up_MouseOver"/>
            <property key="EaSynth.arrow.left.pressed" type="idref" value="GinjArrow_Left_MouseOver"/>
            <property key="EaSynth.arrow.down.pressed" type="idref" value="GinjArrow_Down_MouseOver"/>
            <property key="EaSynth.arrow.right.pressed" type="idref" value="GinjArrow_Right_MouseOver"/>
        </state>
    </style>
    <bind style="GinjArrow Button" type="region" key="ArrowButton" />

    <!-- The style for scroll bar component. -->
    <style id="ScrollBarStyle">
        <property key="ScrollBar.minimumThumbSize" type="dimension" value="15 15"/>

        <object id="ScrollBar_Bg_Color" class="java.awt.Color">
            <int>241</int><int>233</int><int>217</int><int>255</int>
        </object>
        <defaultsProperty key="EaSynth.scrollbar.bgcolor" type="idref" value="ScrollBar_Bg_Color"/>

        <object id="ScrollBar_Border_Color" class="java.awt.Color">
            <int>32</int><int>32</int><int>32</int><int>255</int>
        </object>
        <defaultsProperty key="EaSynth.scrollbar.bordercolor" type="idref" value="ScrollBar_Border_Color"/>

        <painter idref="GinjSynthPainter" method="scrollBarBackground"/>
        <painter idref="GinjSynthPainter" method="scrollBarBorder"/>
        <property key="ScrollBar.thumbHeight" type="integer" value="15"/>
    </style>
    <bind style="ScrollBarStyle" type="region" key="ScrollBar" />

    <!-- The style for the track of scroll bar. -->
    <style id="ScrollBarTrackStyle">
        <object id="ScrollBar_Track_SideColor" class="java.awt.Color">
            <int>48</int>
            <int>48</int>
            <int>48</int>
            <int>255</int>
        </object>
        <defaultsProperty key="EaSynth.scrollbar.track.sidecolor" type="idref" value="ScrollBar_Track_SideColor"/>

        <object id="ScrollBar_Track_CenterColor" class="java.awt.Color">
            <int>48</int>
            <int>48</int>
            <int>48</int>
            <int>255</int>
        </object>
        <defaultsProperty key="EaSynth.scrollbar.track.centercolor" type="idref" value="ScrollBar_Track_CenterColor"/>

        <object id="ScrollBar_Track_BorderColor" class="java.awt.Color">
            <int>32</int>
            <int>32</int>
            <int>32</int>
            <int>255</int>
        </object>
        <defaultsProperty key="EaSynth.scrollbar.track.bordercolor" type="idref" value="ScrollBar_Track_BorderColor"/>

        <painter idref="GinjSynthPainter" method="scrollBarTrackBackground"/>
        <painter idref="GinjSynthPainter" method="scrollBarTrackBorder"/>
    </style>
    <bind style="ScrollBarTrackStyle" type="region" key="ScrollBarTrack" />

    <!-- Had to use a custom 9-tile painter to take care of image rotation accorgding to vertical/horizontal scrollbar -->
    <style id="ScrollBarThumbStyle">
        <object id="GinjScrollBar_Thumb_Bg_Insets" class="java.awt.Insets">
            <int>2</int><int>2</int><int>2</int><int>2</int>
        </object>
        <property key="Ginj.scrollbar.thumb.bg.insets" type="idref" value="GinjScrollBar_Thumb_Bg_Insets"/>

        <!-- Define the image for vertical scrollbar. Will be rotated 90° for horizontal scrollbars -->
        <imageIcon id="GinjScrollBar_Thumb_Background" path="/img/laf/scrollbar_thumb_vertical_bg.png"/>
        <property key="Ginj.scrollbar.thumb.horizontal.background" type="idref" value="GinjScrollBar_Thumb_Background"/>

        <painter idref="GinjSynthPainter" method="scrollBarThumbBackground"/>
    </style>
    <bind style="ScrollBarThumbStyle" type="region" key="ScrollBarThumb" />



    <!-- The style for scroll pane component. -->
    <style id="Scroll Pane">
        <insets top="2" left="2" bottom="2" right="2"/>
        <opaque value="false"/>
        <state>
            <color type="BACKGROUND" value="#00FF00"/>
        </state>
        <state value="ENABLED">
            <imagePainter method="scrollPaneBorder" path="/img/laf/scroll_border_enabled.png" sourceInsets="1 1 1 1" paintCenter="true" stretch="true" center="false"/>
        </state>
        <state value="DISABLED">
            <imagePainter method="scrollPaneBorder" path="/img/laf/scroll_border_disabled.png" sourceInsets="1 1 1 1" paintCenter="true" stretch="true" center="false"/>
        </state>
    </style>
    <bind style="Scroll Pane" type="region" key="ScrollPane" />

    <!-- The style for the viewport component. -->
    <style id="Viewport">
        <opaque value="false"/>
    </style>
    <bind style="Viewport" type="region" key="Viewport" />

    <!-- The style for separator component. -->
    <style id="Separator">
        <property key="Separator.thickness" type="integer" value="1"/>
        <opaque value="true"/>
        <state value="ENABLED">
            <color type="BACKGROUND" value="#CCBB99"/>
        </state>
        <state value="DISABLED">
            <color type="BACKGROUND" value="#CCCCCC"/>
        </state>
    </style>
    <bind style="Separator" type="region" key="Separator" />

    <!-- The style for slider component. -->
    <style id="Slider">
        <property key="Slider.paintValue" type="boolean" value="false"/>
        <property key="Slider.thumbWidth" type="integer" value="14"/>
        <property key="Slider.thumbHeight" type="integer" value="14"/>
    </style>
    <bind style="Slider" type="region" key="Slider" />

    <!-- The style for the track of slider. -->
    <style id="SliderTrackStyle">
        <imagePainter method="sliderTrackBackground" path="/img/laf/slidertrack.png" sourceInsets="7 7 7 7" destinationInsets="7 7 7 7" paintCenter="true" stretch="true" center="false"/>
        <state value="DISABLED">
            <imagePainter method="sliderTrackBackground" path="/img/laf/slidertrack_disabled.png" sourceInsets="7 7 7 7" destinationInsets="7 7 7 7" paintCenter="true" stretch="true" center="false"/>
        </state>
    </style>
    <bind style="SliderTrackStyle" type="region" key="SliderTrack" />

    <!-- The style for the thumb of slider. -->
    <style id="SliderThumbStyle">
        <painter idref="GinjSynthPainter" method="sliderThumbBackground"/>
        <imageIcon id="Slider_Thumb_Image_Normal" path="/img/laf/sliderthumb.png"/>
        <property key="EaSynth.slider.thumb.image.normal" type="idref" value="Slider_Thumb_Image_Normal"/>
        <imageIcon id="Slider_Thumb_Image_MouseOver" path="/img/laf/sliderthumb_mouseOver.png"/>
        <property key="EaSynth.slider.thumb.image.mouseover" type="idref" value="Slider_Thumb_Image_MouseOver"/>
        <imageIcon id="Slider_Thumb_Image_Disabled" path="/img/laf/sliderthumb_disabled.png"/>
        <property key="EaSynth.slider.thumb.image.disabled" type="idref" value="Slider_Thumb_Image_Disabled"/>
    </style>
    <bind style="SliderThumbStyle" type="region" key="SliderThumb" />

    <!--    &lt;!&ndash; The style for the split pane component. &ndash;&gt;-->
    <!--    <style id="Split Pane">-->
    <!--        <property key="SplitPane.centerOneTouchButtons" type="boolean" value="true"/>-->
    <!--        <property key="SplitPane.size" type="integer" value="10"/>-->
    <!--    </style>-->
    <!--    <bind style="Split Pane" type="region" key="SplitPane" />-->

    <!--    &lt;!&ndash; The style for the devider of split pane. &ndash;&gt;-->
    <!--    <style id="Split Pane Divider">-->
    <!--        <object id="SplitPane_Divider_MainColor" class="java.awt.Color">-->
    <!--            <int>220</int><int>180</int><int>150</int><int>255</int>-->
    <!--        </object>-->
    <!--        <defaultsProperty key="EaSynth.splitpane.divider.maincolor" type="idref" value="SplitPane_Divider_MainColor"/>-->
    <!--        <imageIcon id="SplitPane_Divider_Image" path="resource/1204451219828_splitpane_divider_image.png"/>-->
    <!--        <property key="EaSynth.splitpane.divider.image" type="idref" value="SplitPane_Divider_Image"/>-->
    <!--        <painter idref="GinjSynthPainter" method="splitPaneDividerBackground"/>-->
    <!--        <painter idref="GinjSynthPainter" method="splitPaneDragDivider"/>-->
    <!--    </style>-->
    <!--    <bind style="Split Pane Divider" type="region" key="SplitPaneDivider" />-->

    <!--    &lt;!&ndash; The style for table component. &ndash;&gt;-->
    <!--    <style id="Table">-->
    <!--        <property key="Table.rendererUseUIBorder" type="boolean" value="false"/>-->
    <!--        <object id="Table_Grid_Color" class="java.awt.Color">-->
    <!--            <int>160</int><int>120</int><int>90</int><int>255</int>-->
    <!--        </object>-->
    <!--        <property key="Table.gridColor" type="idref" value="Table_Grid_Color"/>-->
    <!--        <state value="ENABLED">-->
    <!--            <color type="TEXT_FOREGROUND" value="#FFFFFF"/>-->
    <!--            <color type="BACKGROUND" value="#777777"/>-->
    <!--        </state>-->
    <!--        <state value="DISABLED">-->
    <!--            <color type="TEXT_FOREGROUND" value="#CCCCCC"/>-->
    <!--            <color type="BACKGROUND" value="#EEEEEE"/>-->
    <!--        </state>-->
    <!--        <state value="SELECTED">-->
    <!--            <color type="TEXT_FOREGROUND" value="#CC6600"/>-->
    <!--            <color type="TEXT_BACKGROUND" value="#FFEEDD"/>-->
    <!--            <color type="FOCUS" value="#FFEEDD"/>-->
    <!--        </state>-->
    <!--    </style>-->
    <!--    <bind style="Table" type="region" key="Table" />-->

    <!--    &lt;!&ndash; The style for the header component of table. &ndash;&gt;-->
    <!--    <style id="Table Header">-->
    <!--        <insets top="3" left="3" bottom="3" right="3"/>-->
    <!--        <painter idref="GinjSynthPainter" method="tableHeaderBorder"/>-->
    <!--        <imagePainter method="tableHeaderBackground" path="resource/1204728244468_table_header_bg_enabled.png" sourceInsets="0 0 0 0" paintCenter="true" stretch="true" center="false"/>-->
    <!--        <state value="ENABLED">-->
    <!--            <color type="TEXT_FOREGROUND" value="#FFFFFF"/>-->
    <!--        </state>-->
    <!--        <state value="DISABLED">-->
    <!--            <imagePainter method="tableHeaderBackground" path="resource/1204449497890_table_header_bg_disabled.png" sourceInsets="0 0 0 0" paintCenter="true" stretch="true" center="false"/>-->
    <!--            <color type="TEXT_FOREGROUND" value="#CCCCCC"/>-->
    <!--        </state>-->
    <!--    </style>-->
    <!--    <bind style="Table Header" type="region" key="TableHeader" />-->

    <!-- The style for the tabbed pane component. -->
    <style id="TabbedPaneStyle">
        <property key="TabbedPane.textIconGap" type="integer" value="2"/>
    </style>
    <bind style="TabbedPaneStyle" type="region" key="TabbedPane" />

    <!-- The style for the tabbed pane content. -->
    <style id="TabbedPaneContentStyle">
    </style>
    <bind style="TabbedPaneContentStyle" type="region" key="TabbedPaneContent" />

    <!-- The style for the tabs of tabbed pane. -->
    <style id="TabbedPaneTabStyle">
        <property key="Button.textShiftOffset" type="integer" value="1"/>
        <insets top="6" left="5" bottom="2" right="5"/>
<!--        <imagePainter method="tabbedPaneTabBorder" path="/img/laf/tab_border.png" sourceInsets="0 1 0 1" paintCenter="true" stretch="true" center="false"/>-->
        <!-- Note: sourceInsets are top, left, bottom, and right -->
        <state value="ENABLED">
            <imagePainter method="tabbedPaneTabBackground" path="/img/laf/tab_bg_enabled.png" sourceInsets="3 3 3 3" paintCenter="true" stretch="true" center="false"/>
            <color type="TEXT_FOREGROUND" value="#FBB901"/>
        </state>
        <state value="DISABLED">
            <imagePainter method="tabbedPaneTabBackground" path="/img/laf/tab_bg_disabled.png" sourceInsets="3 3 3 3" paintCenter="true" stretch="true" center="false"/>
            <color type="TEXT_FOREGROUND" value="#999999"/>
        </state>
        <state value="SELECTED">
            <imagePainter method="tabbedPaneTabBackground" path="/img/laf/tab_bg_selected.png" sourceInsets="3 3 3 3" paintCenter="true" stretch="true" center="false"/>
            <color type="TEXT_FOREGROUND" value="#FBB901"/>
        </state>
    </style>
    <bind style="TabbedPaneTabStyle" type="region" key="TabbedPaneTab" />

<!--    &lt;!&ndash; The style for the tab area of tabbed pane. &ndash;&gt;-->
<!--    <style id="Tabbed Pane Tab Area">-->
<!--        <insets top="3" left="5" bottom="0" right="5"/>-->
<!--    </style>-->
<!--    <bind style="Tabbed Pane Tab Area" type="region" key="TabbedPaneTabArea" />-->

    <!-- The style for standard label component. -->
    <style id="LabelStyle">
        <state value="ENABLED">
            <color type="FOREGROUND" value="#FFFFFF"/>
        </state>
        <state value="DISABLED">
            <color type="FOREGROUND" value="#999999"/>
        </state>
        <state value="SELECTED">
            <color type="FOREGROUND" value="#FFFFFF"/>
        </state>
    </style>
    <bind style="LabelStyle" type="region" key="Label" />

    <!-- The style for yellow label. -->
    <style id="YellowLabelStyle">
        <font name="Dialog" size="12" style="BOLD"/>
        <state value="ENABLED">
            <color type="FOREGROUND" value="#FBB901"/>
        </state>
    </style>
    <bind style="YellowLabelStyle" type="name" key="YellowLabel" />

    <!-- The style for yellow label on dark rectangle. -->
    <style id="BorderedLabelStyle">
        <insets top="3" left="3" bottom="3" right="3"/>
        <font name="Dialog" size="12" style="BOLD"/>
        <imagePainter method="labelBorder" path="/img/laf/label_bg.png" sourceInsets="2 2 2 2" paintCenter="false" stretch="true" center="false"/>
        <state value="ENABLED">
            <color type="FOREGROUND" value="#FBB901"/>
            <color type="BACKGROUND" idref="Label_Background_Color"/>
        </state>
    </style>
    <bind style="BorderedLabelStyle" type="name" key="BorderedLabel" />

    <!-- This is a duplicate "default" style for key=".*". Tried to merge them to no avail. -->
    <!-- Seems this style must stay here and not move to top, otherwise background is not applied to CaptureEditingFrame (?!) -->
    <!-- NOTE The reason is not clear. It seems some components inherit from the first one and others from this one (even some before, e.g. Panels)
     However, some fields such as the Drives dropdown in the save dialog are only affected (become dark grey) if the BACKGROUND is moved up in the file-->
    <style id="backingStyle">
        <!-- Make all the regions opaque-->
        <opaque value="TRUE"/>
        <font name="Dialog" size="12"/>
        <state>
            <color type="BACKGROUND" idref="Window_Background_Color"/>
        </state>
    </style>
    <bind style="backingStyle" type="region" key=".*"/>


    <!-- The style for title bar label. -->
    <!-- Yeah, it's defined below the duplicate default ".*" style. -->
    <!-- This one MUST be transparent, but it only works if it comes AFTER the default style that instructs it to be opaque. Go figure -->
    <!-- One day, I will understand SynthLayout ... maybe -->
    <style id="TitleBarLabelStyle">
        <opaque value="false"/>
        <insets top="3" left="3" bottom="3" right="3"/>
        <font name="Lucida" size="13" style="BOLD"/>
        <state value="ENABLED">
            <color type="FOREGROUND" value="#000000"/>
        </state>
    </style>
    <bind style="TitleBarLabelStyle" type="name" key="TitleBarLabel" />


    <!-- After code debugging the style for text field component. -->
    <!-- SynthTextFieldUI will call: -->
    <!--    setForeground()        on the component with the TEXT_FOREGROUND color of whatever state the component is in -->
    <!--    setSelectionColor()    on the component with the TEXT_BACKGROUND color defined for the state SELECTED | FOCUSED -->
    <!--    setSelectedTextColor() on the component with the TEXT_FOREGROUND color defined for the state SELECTED | FOCUSED -->
    <!--    setDisabledTextColor() on the component with the TEXT_FOREGROUND color defined for the state DISABLED -->

<!--    <style id="Text Field">-->
<!--        <opaque value="true"/>-->
<!--        <state>-->
<!--            &lt;!&ndash; The font color &ndash;&gt;-->
<!--            <color type="FOREGROUND" value="BLACK"/>-->
<!--            &lt;!&ndash; The field background &ndash;&gt;-->
<!--            <color type="BACKGROUND" value="WHITE"/>-->
<!--            &lt;!&ndash; The selected text background &ndash;&gt;-->
<!--            <color type="TEXT_BACKGROUND" value="#98C8EE"/>-->
<!--        </state>-->
<!--    </style>-->
<!--    <bind style="Text Field" type="region" key="TextField"/>-->

        <style id="Text Field">
            <insets top="3" left="3" bottom="3" right="3"/>
            <opaque value="true"/>
            <state>
                <!-- The font color -->
                <color type="FOREGROUND" value="#000000"/>
                <!-- The field background -->
                <color type="BACKGROUND" value="#DDDAD5"/>
                <!-- The selected text background -->
                <color type="TEXT_BACKGROUND" value="#98C8EE"/>
            </state>
            <state value="ENABLED">
                <imagePainter method="textFieldBorder" path="/img/laf/textfield_bg.png" sourceInsets="1 1 1 1" paintCenter="false" stretch="true" center="false"/>
            </state>
            <state value="FOCUSED">
                <imagePainter method="textFieldBorder" path="/img/laf/textfield_bg_focused.png" sourceInsets="1 1 1 1" paintCenter="false" stretch="true" center="false"/>
            </state>
            <state value="SELECTED">
                <imagePainter method="textFieldBorder" path="/img/laf/textfield_bg_focused.png" sourceInsets="1 1 1 1" paintCenter="false" stretch="true" center="false"/>
            </state>
            <state value="DISABLED">
                <imagePainter method="textFieldBorder" path="/img/laf/textfield_bg.png" sourceInsets="1 1 1 1" paintCenter="false" stretch="true" center="false"/>
                <!-- The font color -->
                <color type="FOREGROUND" value="#000000"/>
                <!-- The field background -->
                <color type="BACKGROUND" value="#777777"/>
            </state>
        </style>
        <bind style="Text Field" type="region" key="TextField" />

    <!-- The style for formatted text field component. -->
    <style id="Formatted Text Field" clone="Text Field">
    </style>
    <bind style="Formatted Text Field" type="region" key="FormattedTextField" />

    <!-- The style for password field. -->
    <style id="Password Field" clone="Text Field">
    </style>
    <bind style="Password Field" type="region" key="PasswordField" />

    <!-- The style for text area component. -->
    <style id="Text Area">
        <insets top="3" left="3" bottom="3" right="3"/>
        <opaque value="true"/>
        <state value="ENABLED">
            <color type="FOREGROUND" value="#000000"/>
            <color type="BACKGROUND" value="#FFFFFF"/>
        </state>
        <state value="SELECTED">
            <color type="TEXT_BACKGROUND" value="#98C8EE"/>
        </state>
    </style>
    <bind style="Text Area" type="region" key="TextArea" />

    <!-- The style for text pane component. -->
    <style id="Text Pane">
        <state value="ENABLED">
            <color type="TEXT_FOREGROUND" value="#000000"/>
            <color type="TEXT_BACKGROUND" value="#FFFFFF"/>
            <color type="BACKGROUND" value="#FFFFFF"/>
        </state>
        <state value="DISABLED">
            <color type="TEXT_FOREGROUND" value="#999999"/>
            <color type="BACKGROUND" value="#F0F0F0"/>
        </state>
        <state value="SELECTED">
            <color type="TEXT_FOREGROUND" value="#FFFFFF"/>
            <color type="TEXT_BACKGROUND" value="#98C8EE"/>
        </state>
    </style>
    <bind style="Text Pane" type="region" key="TextPane" />

    <!-- The style for editor pane component (used for HTML). -->
    <style id="EditorPaneStyle">
        <state value="ENABLED">
            <color type="TEXT_FOREGROUND" value="#FFFFFF"/>
        </state>
        <state value="DISABLED">
            <color type="TEXT_FOREGROUND" value="#999999"/>
        </state>
        <state value="SELECTED">
            <color type="TEXT_FOREGROUND" value="#FFFFFF"/>
            <color type="TEXT_BACKGROUND" value="#98C8EE"/>
        </state>
    </style>
    <bind style="EditorPaneStyle" type="region" key="EditorPane" />

<!--    &lt;!&ndash; The style for spinner component. &ndash;&gt;-->
<!--    <style id="Spinner">-->
<!--        <opaque value="false"/>-->
<!--    </style>-->
<!--    <bind style="Spinner" type="region" key="Spinner" />-->

<!--    &lt;!&ndash; The style for the list renderer of JComboBox &ndash;&gt;-->
<!--    <style id="ComboBox List Renderer">-->
<!--        <insets top="3" left="3" bottom="3" right="3"/>-->
<!--        <opaque value="true"/>-->
<!--        <state value="ENABLED">-->
<!--            &lt;!&ndash; Text of hovered item in a list &ndash;&gt;-->
<!--            <color type="TEXT_FOREGROUND" value="#000000"/>-->
<!--            <color type="TEXT_BACKGROUND" value="#FFFFFF"/>-->
<!--        </state>-->
<!--        <state value="DISABLED">-->
<!--            <color type="TEXT_FOREGROUND" value="#999999"/>-->
<!--            <color type="TEXT_BACKGROUND" value="#FFFFFF"/>-->
<!--        </state>-->
<!--        <state value="SELECTED">-->
<!--            <color type="TEXT_FOREGROUND" value="#CC6600"/>-->
<!--            <color type="TEXT_BACKGROUND" value="#FFEEDD"/>-->
<!--        </state>-->
<!--    </style>-->
<!--    <bind style="ComboBox List Renderer" type="name" key="ComboBox.listRenderer" />-->

    <!--    &lt;!&ndash; The style for the renderer of dragging table header &ndash;&gt;-->
    <!--    <style id="Table Header Renderer">-->
    <!--        <insets top="3" left="3" bottom="3" right="3"/>-->
    <!--        <imagePainter method="labelBackground" path="resource/1204728244468_table_header_bg_enabled.png" sourceInsets="0 0 0 0" paintCenter="true" stretch="true" center="false"/>-->
    <!--        <state value="ENABLED">-->
    <!--            <color type="TEXT_FOREGROUND" value="#00FF00"/>-->
    <!--        </state>-->
    <!--        <state value="DISABLED">-->
    <!--            <color type="TEXT_FOREGROUND" value="#CCCCCC"/>-->
    <!--            <imagePainter method="labelBackground" path="resource/1204449497890_table_header_bg_disabled.png" sourceInsets="0 0 0 0" paintCenter="true" stretch="true" center="false"/>-->
    <!--        </state>-->
    <!--    </style>-->
    <!--    <bind style="Table Header Renderer" type="name" key="TableHeader.renderer" />-->

    <!--    &lt;!&ndash; The style for tool bar component. &ndash;&gt;-->
    <!--    <style id="Tool Bar">-->
    <!--        <imageIcon id="Toolbar_Handle_Icon" path="resource/1204547880578_toolbar_handle_icon.png"/>-->
    <!--        <property key="ToolBar.handleIcon" type="idref" value="Toolbar_Handle_Icon"/>-->
    <!--        <object id="Toolbar_Bg_Color1" class="java.awt.Color">-->
    <!--            <int>190</int><int>170</int><int>145</int><int>255</int>-->
    <!--        </object>-->
    <!--        <defaultsProperty key="EaSynth.toolbar.bg.color1" type="idref" value="Toolbar_Bg_Color1"/>-->
    <!--        <object id="Toolbar_Bg_Color2" class="java.awt.Color">-->
    <!--            <int>255</int><int>245</int><int>230</int><int>255</int>-->
    <!--        </object>-->
    <!--        <defaultsProperty key="EaSynth.toolbar.bg.color2" type="idref" value="Toolbar_Bg_Color2"/>-->
    <!--        <object id="Toolbar_Bg_Color3" class="java.awt.Color">-->
    <!--            <int>240</int><int>225</int><int>205</int><int>255</int>-->
    <!--        </object>-->
    <!--        <defaultsProperty key="EaSynth.toolbar.bg.color3" type="idref" value="Toolbar_Bg_Color3"/>-->
    <!--        <painter idref="GinjSynthPainter" method="toolBarBackground"/>-->
    <!--    </style>-->
    <!--    <bind style="Tool Bar" type="region" key="ToolBar" />-->

    <!--    &lt;!&ndash; The style for tool bar content component. &ndash;&gt;-->
    <!--    <style id="Tool Bar Content">-->
    <!--    </style>-->
    <!--    <bind style="Tool Bar Content" type="region" key="ToolBarContent" />-->

    <!--    &lt;!&ndash; The style for tool bar separator. &ndash;&gt;-->
    <!--    <style id="Tool Bar Separator">-->
    <!--        <property key="Separator.thickness" type="integer" value="6"/>-->
    <!--        <opaque value="false"/>-->
    <!--    </style>-->
    <!--    <bind style="Tool Bar Separator" type="region" key="ToolBarSeparator" />-->

    <!--    &lt;!&ndash; The style for tool bar drag window. &ndash;&gt;-->
    <!--    <style id="Tool Bar Drag Window">-->
    <!--        <state value="ENABLED">-->
    <!--            <imagePainter method="toolBarDragWindowBackground" path="resource/1204466391828_toolbar_background_enabled.png" sourceInsets="0 0 0 0" paintCenter="true" stretch="true" center="false"/>-->
    <!--        </state>-->
    <!--    </style>-->
    <!--    <bind style="Tool Bar Drag Window" type="region" key="ToolBarDragWindow" />-->

    <!--    &lt;!&ndash; The style for tree component. &ndash;&gt;-->
    <!--    <style id="Tree">-->
    <!--        <opaque value="true"/>-->
    <!--        <property key="Tree.leftChildIndent" type="integer" value="10"/>-->
    <!--        <property key="Tree.rightChildIndent" type="integer" value="10"/>-->
    <!--        <imageIcon id="Tree_Collapse_Icon" path="resource/1204977613109_tree_cell_collapse.png"/>-->
    <!--        <property key="Tree.collapsedIcon" type="idref" value="Tree_Collapse_Icon"/>-->
    <!--        <imageIcon id="Tree_Expand_Icon" path="resource/1204977624531_tree_cell_expand.png"/>-->
    <!--        <property key="Tree.expandedIcon" type="idref" value="Tree_Expand_Icon"/>-->
    <!--        &lt;!&ndash; If we set this property to >0, the line in tree will contain curve, but it will also bring some painting issues when scrolling the tree. So we set it to 0 here. &ndash;&gt;-->
    <!--        <defaultsProperty key="EaSynth.graphicsutils.drawline.arc.width" type="integer" value="0"/>-->
    <!--        &lt;!&ndash; If we set this property to >0, the line in tree will contain curve, but it will also bring some painting issues when scrolling the tree. So we set it to 0 here. &ndash;&gt;-->
    <!--        <defaultsProperty key="EaSynth.graphicsutils.drawline.arc.height" type="integer" value="0"/>-->
    <!--        <object id="Tree_Line_Color" class="java.awt.Color">-->
    <!--            <int>190</int><int>170</int><int>140</int><int>255</int>-->
    <!--        </object>-->
    <!--        <defaultsProperty key="EaSynth.graphicsutils.drawline.color" type="idref" value="Tree_Line_Color"/>-->
    <!--        <graphicsUtils idref="EaSynthGraphicsUtils"/>-->
    <!--        <state value="ENABLED">-->
    <!--            <color type="BACKGROUND" value="#FFFFFF"/>-->
    <!--        </state>-->
    <!--        <state value="DISABLED">-->
    <!--            <color type="BACKGROUND" value="#EEEEEE"/>-->
    <!--        </state>-->
    <!--    </style>-->
    <!--    <bind style="Tree" type="region" key="Tree" />-->

    <!--    &lt;!&ndash; The style for the cell of the tree component. &ndash;&gt;-->
    <!--    <style id="Tree Cell">-->
    <!--        <opaque value="true"/>-->
    <!--        <imageIcon id="Tree_Folder_Close_Icon" path="resource/1204455288906_tree_folder_close.png"/>-->
    <!--        <imageIcon id="Tree_Folder_Open_Icon" path="resource/1204455296437_tree_folder_open.png"/>-->
    <!--        <imageIcon id="Tree_Leaf_Icon" path="resource/1204397671453_tree_leaf_icon.png"/>-->
    <!--        <defaultsProperty key="Tree.leafIcon" type="idref" value="Tree_Leaf_Icon"/>-->
    <!--        <defaultsProperty key="Tree.openIcon" type="idref" value="Tree_Folder_Open_Icon"/>-->
    <!--        <defaultsProperty key="Tree.closedIcon" type="idref" value="Tree_Folder_Close_Icon"/>-->
    <!--        <state value="SELECTED">-->
    <!--            <color type="TEXT_FOREGROUND" value="#CC6600"/>-->
    <!--            <color type="BACKGROUND" value="#FFEEDD"/>-->
    <!--        </state>-->
    <!--    </style>-->
    <!--    <bind style="Tree Cell" type="region" key="TreeCell" />-->

    <!-- The style for "standard" buttons (e.g. bottom row or in Dialogs) -->
    <style id="ButtonStyle">
        <!-- Shift the text one pixel when pressed -->
        <property key="Button.textShiftOffset" type="integer" value="1"/>
        <!-- Space between button border and contents -->
        <insets top="4" left="12" bottom="4" right="12"/>
        <state value="ENABLED">
            <!-- Note: sourceInsets are top, left, bottom, and right -->
            <imagePainter method="buttonBackground" path="/img/laf/button_bg.png" sourceInsets="4 4 4 4"/>
            <color type="FOREGROUND" value="#FBB901"/>
        </state>
        <state value="MOUSE_OVER">
            <imagePainter method="buttonBackground" path="/img/laf/button_bg.png" sourceInsets="4 4 4 4"/>
            <color type="FOREGROUND" value="#FBB901"/>
        </state>
        <state value="PRESSED">
            <imagePainter method="buttonBackground" path="/img/laf/button_bg_pressed.png" sourceInsets="4 4 4 4"/>
            <color type="FOREGROUND" value="#FBB901"/>
        </state>
        <state value="DISABLED">
            <imagePainter method="buttonBackground" path="/img/laf/button_bg.png" sourceInsets="4 4 4 4"/> <!-- TODO use a flat style for disabled ? -->
            <color type="TEXT_FOREGROUND" value="#9E8B5B"/>
        </state>
    </style>
    <bind style="ButtonStyle" type="region" key="Button" />


    <!-- The style for square "normal" buttons on the left -->
    <style id="ToolButtonStyle">
        <!-- Shift the text one pixel when pressed -->
        <!--        <property key="Button.textShiftOffset" type="integer" value="1"/>-->
        <!-- Space between button border and contents -->
        <insets top="4" left="4" bottom="4" right="4"/>
        <state value="ENABLED">
            <!-- Note: sourceInsets are top, left, bottom, and right -->
            <imagePainter method="buttonBackground" path="/img/laf/toolbutton_bg.png" sourceInsets="4 4 4 4"/>
        </state>
        <state value="MOUSE_OVER">
            <imagePainter method="buttonBackground" path="/img/laf/toolbutton_bg_hover.png" sourceInsets="4 4 4 4"/>
        </state>
        <state value="PRESSED">
            <imagePainter method="buttonBackground" path="/img/laf/toolbutton_bg_hover.png" sourceInsets="4 4 4 4"/>
        </state>
        <state value="DISABLED">
            <imagePainter method="buttonBackground" path="/img/laf/toolbutton_bg.png" sourceInsets="4 4 4 4"/>
        </state>
    </style>
    <bind style="ToolButtonStyle" type="name" key="ToolButton"/>

    <!-- The style for regular toggle button. -->
    <!-- Note that all toggle buttons are subclasses with names, such as ToolToggleButton -->
    <!-- According to https://docs.oracle.com/javase/tutorial/uiswing/lookandfeel/synth.html -->
    <!-- "Just as a style can be bound to multiple regions or names, multiple styles can be bound to a region or name. -->
    <!--  These multiple styles are merged for the region or name. Precedence is given to styles defined later in the file." -->
    <!-- So I would expect the ToggleButtonStyle and ToolToggleButtonStyle to be redundant as everything is defined by identical painters -->
    <!-- However, if either the generic ToggleButtonStyle is removed then tool ToggleButtons lose their onHover styling -->
    <!-- and if the specific ToolToggleButtonStyle is removed then color button becomes wider  -->
    <style id="ToggleButtonStyle">
        <!-- Space between button border and contents -->
        <insets top="4" left="4" bottom="4" right="4"/>
        <state value="ENABLED">
            <imagePainter method="toggleButtonBackground" path="/img/laf/toolbutton_bg.png" sourceInsets="4 4 4 4" paintCenter="true" stretch="true" center="false"/>
        </state>
        <state value="MOUSE_OVER">
            <imagePainter method="toggleButtonBackground" path="/img/laf/toolbutton_bg_hover.png" sourceInsets="4 4 4 4" paintCenter="true" stretch="true" center="false"/>
        </state>
        <state value="PRESSED">
            <imagePainter method="toggleButtonBackground" path="/img/laf/toolbutton_bg_selected_hover.png" sourceInsets="4 4 4 4" paintCenter="true" stretch="true" center="false"/>
        </state>
        <state value="DISABLED">
            <imagePainter method="toggleButtonBackground" path="/img/laf/toolbutton_bg.png" sourceInsets="4 4 4 4" paintCenter="true" stretch="true" center="false"/>
            <color type="TEXT_FOREGROUND" value="#999999"/>
        </state>
        <state value="SELECTED">
            <imagePainter method="toggleButtonBackground" path="/img/laf/toolbutton_bg_selected.png" sourceInsets="4 4 4 4" paintCenter="true" stretch="true" center="false"/>
        </state>
    </style>
    <bind style="ToggleButtonStyle" type="region" key="ToggleButton" />

    <!-- The style for square "tool" buttons on the left ("toggle" means one remains depressed) -->
    <!-- This uses the default ToggleButtonStyle above -->
    <style id="ToolToggleButtonStyle">
        <!-- Space between button border and contents -->
        <insets top="4" left="4" bottom="4" right="4"/>
        <state value="ENABLED">
            <imagePainter method="toggleButtonBackground" path="/img/laf/toolbutton_bg.png" sourceInsets="4 4 4 4" paintCenter="true" stretch="true" center="false"/>
        </state>
        <state value="MOUSE_OVER">
            <imagePainter method="toggleButtonBackground" path="/img/laf/toolbutton_bg_hover.png" sourceInsets="4 4 4 4" paintCenter="true" stretch="true" center="false"/>
        </state>
        <state value="PRESSED">
            <imagePainter method="toggleButtonBackground" path="/img/laf/toolbutton_bg_selected_hover.png" sourceInsets="4 4 4 4" paintCenter="true" stretch="true" center="false"/>
        </state>
        <state value="DISABLED">
            <imagePainter method="toggleButtonBackground" path="/img/laf/toolbutton_bg.png" sourceInsets="4 4 4 4" paintCenter="true" stretch="true" center="false"/>
        </state>
        <state value="SELECTED">
            <imagePainter method="toggleButtonBackground" path="/img/laf/toolbutton_bg_selected.png" sourceInsets="4 4 4 4" paintCenter="true" stretch="true" center="false"/>
        </state>
    </style>
    <bind style="ToolToggleButtonStyle" type="name" key="ToolToggleButton"/>

    <!-- The style for mini square buttons on the left (undo/redo) -->
    <style id="MiniToolButtonStyle">
        <!-- Shift the text one pixel when pressed -->
        <property key="Button.textShiftOffset" type="integer" value="1"/>
        <!-- Space between button border and contents -->
        <insets top="3" left="3" bottom="3" right="3"/>
        <state value="ENABLED">
            <!-- Note: sourceInsets are top, left, bottom, and right -->
            <imagePainter method="buttonBackground" path="/img/laf/mini_toolbutton_bg.png" sourceInsets="4 4 4 4"/>
        </state>
        <state value="MOUSE_OVER">
            <imagePainter method="buttonBackground" path="/img/laf/mini_toolbutton_bg_hover.png" sourceInsets="4 4 4 4"/>
        </state>
        <state value="PRESSED">
            <imagePainter method="buttonBackground" path="/img/laf/mini_toolbutton_bg_hover.png" sourceInsets="4 4 4 4"/>
        </state>
        <state value="DISABLED">
            <imagePainter method="buttonBackground" path="/img/laf/mini_toolbutton_bg_disabled.png" sourceInsets="4 4 4 4"/>
        </state>
    </style>
    <bind style="MiniToolButtonStyle" type="name" key="MiniToolButton"/>

    <!-- The style for toggle buttons in the color selection popup -->
    <style id="ColorToggleButtonStyle">
        <!-- Space between button border and contents -->
        <insets top="4" left="4" bottom="4" right="4"/>
        <state value="ENABLED">
            <!-- Note: sourceInsets are top, left, bottom, and right -->
            <imagePainter method="toggleButtonBackground" path="/img/laf/colorbutton_bg.png" sourceInsets="4 4 4 4" paintCenter="true" stretch="true" center="false"/>
        </state>
        <state value="MOUSE_OVER">
            <!-- Note insets are wider so that part of the white center square shows up -->
            <imagePainter method="toggleButtonBackground" path="/img/laf/colorbutton_bg_selected.png" sourceInsets="4 4 4 4" paintCenter="true" stretch="true" center="false"/>
        </state>
        <state value="PRESSED">
            <imagePainter method="toggleButtonBackground" path="/img/laf/colorbutton_bg_selected.png" sourceInsets="4 4 4 4" paintCenter="true" stretch="true" center="false"/>
        </state>
        <state value="SELECTED">
            <imagePainter method="toggleButtonBackground" path="/img/laf/colorbutton_bg_selected.png" sourceInsets="4 4 4 4" paintCenter="true" stretch="true" center="false"/>
        </state>
    </style>
    <bind style="ColorToggleButtonStyle" type="name" key="ColorToggleButton"/>

    <!-- The style for history sort and filter toggle buttons -->
    <style id="HistoryToggleButtonStyle">
        <!-- Space between button border and contents -->
        <insets top="2" left="5" bottom="2" right="5"/>
        <font name="Dialog" size="10" style="BOLD"/>
        <state>
            <color value="#FBB901" type="FOREGROUND"/>-->
        </state>
        <state value="ENABLED">
            <!-- Note: sourceInsets are top, left, bottom, and right -->
            <imagePainter method="toggleButtonBackground" path="/img/laf/history_togglebutton_bg.png" sourceInsets="6 6 6 6" paintCenter="true" stretch="true" center="false"/>
        </state>
        <state value="MOUSE_OVER">
            <imagePainter method="toggleButtonBackground" path="/img/laf/history_togglebutton_bg_hover.png" sourceInsets="6 6 6 6" paintCenter="true" stretch="true" center="false"/>
        </state>
        <state value="PRESSED">
            <imagePainter method="toggleButtonBackground" path="/img/laf/history_togglebutton_bg_pressed.png" sourceInsets="6 6 6 6" paintCenter="true" stretch="true" center="false"/>
        </state>
        <state value="SELECTED">
            <imagePainter method="toggleButtonBackground" path="/img/laf/history_togglebutton_bg_selected.png" sourceInsets="6 6 6 6" paintCenter="true" stretch="true" center="false"/>
        </state>
    </style>
    <bind style="HistoryToggleButtonStyle" type="name" key="HistoryToggleButton"/>


    <!-- TODO-->
    <!--    <style id="titleStyle">-->
    <!--        <state>-->
    <!--            <color value="#F2C800" type="BACKGROUND"/>-->
    <!--            <color value="#000000" type="FOREGROUND"/>-->
    <!--        </state>-->
    <!--    </style>-->
    <!--    <bind style="titleStyle" type="name" key=".*TitleBar"/>-->


    <!-- The style for tool tip. -->
    <style id="ToolTipStyle">
        <opaque value="true"/>
        <state>
            <color type="BACKGROUND" value="#FFFFFF"/>
        </state>
        <insets top="2" left="5" bottom="2" right="5"/>
        <imagePainter method="toolTipBorder" path="/img/laf/tooltip.png" sourceInsets="2 2 2 2" paintCenter="true" stretch="true" center="false"/>
        <state value="ENABLED">
            <color type="TEXT_FOREGROUND" value="#696969"/>
        </state>
        <state value="DISABLED">
            <color type="TEXT_FOREGROUND" value="#999999"/>
        </state>
    </style>
    <bind style="ToolTipStyle" type="region" key="ToolTip" />

</synth>
